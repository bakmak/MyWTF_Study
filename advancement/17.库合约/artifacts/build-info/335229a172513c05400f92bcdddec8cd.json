{
	"id": "335229a172513c05400f92bcdddec8cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"库合约/ArraysLibrary.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Arrays.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Math.sol\";\r\n\r\n/**\r\n * @dev 这是一组与数组类型相关的函数。\r\n */\r\nlibrary Arrays {\r\n    /**\r\n     * @dev 在排序的数组array中搜索，并返回第一个包含大于或等于“元素”的值的索引。如\r\n     * 果不存在这样的索引（即数组中的所有值都严格小于“元素”），则返回数组长度。时间复杂度\r\n     * 为O（log n）。\r\n     *\r\n     * 预计数组按升序排列，并且不包含重复的元素。\r\n     */\r\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\r\n        if (array.length == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 low = 0;\r\n        uint256 high = array.length;\r\n\r\n        while (low < high) {\r\n            uint256 mid = Math.average(low, high);\r\n\r\n            // 注意，mid 的值始终小于 high（也就是说，它将是一个有效的数组索引），因为 Math.average 向下取整（它执行截断的整数除法）。\r\n            if (array[mid] > element) {\r\n                high = mid;\r\n            } else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n\r\n        // 此时，low 是排除的上界。我们将返回包含的上界。\r\n        if (low > 0 && array[low - 1] == element) {\r\n            return low - 1;\r\n        } else {\r\n            return low;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.4.1/contracts/math/SafeMath.sol\";\r\n\r\ncontract ArraysExample {\r\n    using Arrays for uint256[];\r\n    // using SafeMath for uint256;\r\n\r\n    uint256[] public numbers;\r\n\r\n    function addNumber(uint256 number) public {\r\n        numbers.push(number);\r\n    }\r\n\r\n    // function removeNumber(uint256 index) public {\r\n    //     numbers.removeAtIndex(index);\r\n    // }\r\n\r\n    function findUpperBound(uint256 element) public view returns (uint256) {\r\n        return Arrays.findUpperBound(numbers, element);\r\n    }\r\n}\r\n"
			},
			"库合约/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev 标准数学工具缺少在 Solidity 语言中。\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev 函数返回两个数字中最大的那个数。\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev 返回两个数字中最小的那个。\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev 返回两个数字的平均值，结果向零取整。\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev 返回两个数相除的结果的向上取整。\r\n     *\r\n     * 这与使用\"/\"进行标准除法不同，因为它向上取整而不是向下取整。\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a / b + (a % b == 0 ? 0 : 1);\r\n    }\r\n\r\n    /**\r\n     * @dev 返回一个有符号值的绝对无符号值。\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // 必须不经过检查，以支持 n = type(int256).min。\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"库合约/ArraysLibrary.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "这是一组与数组类型相关的函数。",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":204:1488  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":204:1488  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205a5997c587f872b038680d93ed7e7bff80e14bb172d7f077cf72c53c375d2be764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a5997c587f872b038680d93ed7e7bff80e14bb172d7f077cf72c53c375d2be764736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS MSIZE SWAP8 0xC5 DUP8 0xF8 PUSH19 0xB038680D93ED7E7BFF80E14BB172D7F077CF72 0xC5 EXTCODECOPY CALLDATACOPY 0x5D 0x2B 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "204:1284:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a5997c587f872b038680d93ed7e7bff80e14bb172d7f077cf72c53c375d2be764736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS MSIZE SWAP8 0xC5 DUP8 0xF8 PUSH19 0xB038680D93ED7E7BFF80E14BB172D7F077CF72 0xC5 EXTCODECOPY CALLDATACOPY 0x5D 0x2B 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "204:1284:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 204,
									"end": 1488,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a5997c587f872b038680d93ed7e7bff80e14bb172d7f077cf72c53c375d2be764736f6c63430008110033",
									".code": [
										{
											"begin": 204,
											"end": 1488,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 204,
											"end": 1488,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 204,
											"end": 1488,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 204,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 204,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 1488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 204,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 1488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 204,
											"end": 1488,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"库合约/ArraysLibrary.sol",
								"库合约/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"\\u8fd9\\u662f\\u4e00\\u7ec4\\u4e0e\\u6570\\u7ec4\\u7c7b\\u578b\\u76f8\\u5173\\u7684\\u51fd\\u6570\\u3002\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5e93\\u5408\\u7ea6/ArraysLibrary.sol\":\"Arrays\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5e93\\u5408\\u7ea6/ArraysLibrary.sol\":{\"keccak256\":\"0x7208876bc64ffda40e72963a2269cab016313eb1f4bf43ac01b71a8b33cf00a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26562943421478bd81abea734a16890d0a5483e6ed34dc630b18934fbd61f5b6\",\"dweb:/ipfs/QmStzLFt4BBHvRd4JPzjxCk8Ayjva8HgWJJ3BZnwZCgzac\"]},\"\\u5e93\\u5408\\u7ea6/Math.sol\":{\"keccak256\":\"0x24b35fb10a3bcca3a66ec01962f10a243c17e8f06595f9a540227a4b4289efa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5af75827de7176584006d279634b74f4fce614053197ce4b6cace5c0583c50dd\",\"dweb:/ipfs/QmTT73G1gnHajNrsffQr8RqWaqWg7ryLf76n5EgXoiCSkF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ArraysExample": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "addNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "element",
									"type": "uint256"
								}
							],
							"name": "findUpperBound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "numbers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1605:2075  contract ArraysExample {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1605:2075  contract ArraysExample {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x33e3a58a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd39fa233\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfce68023\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1936:2072  function findUpperBound(uint256 element) public view returns (uint256) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1706:1730  uint256[] public numbers */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1739:1820  function addNumber(uint256 number) public {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1936:2072  function findUpperBound(uint256 element) public view returns (uint256) {... */\n    tag_9:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1998:2005  uint256 */\n      0x00\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":2025:2064  Arrays.findUpperBound(numbers, element) */\n      tag_20\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":2047:2054  numbers */\n      0x00\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":2056:2063  element */\n      dup4\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":2025:2046  Arrays.findUpperBound */\n      tag_21\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":2025:2064  Arrays.findUpperBound(numbers, element) */\n      jump\t// in\n    tag_20:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":2018:2064  return Arrays.findUpperBound(numbers, element) */\n      swap1\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1936:2072  function findUpperBound(uint256 element) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1706:1730  uint256[] public numbers */\n    tag_14:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1739:1820  function addNumber(uint256 number) public {... */\n    tag_18:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1792:1799  numbers */\n      0x00\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1805:1811  number */\n      dup2\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1792:1812  numbers.push(number) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1739:1820  function addNumber(uint256 number) public {... */\n      pop\n      jump\t// out\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":607:1485  function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {... */\n    tag_21:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":696:703  uint256 */\n      0x00\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":736:737  0 */\n      dup1\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":720:725  array */\n      dup4\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":720:732  array.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":720:737  array.length == 0 */\n      sub\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":716:774  if (array.length == 0) {... */\n      tag_27\n      jumpi\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":761:762  0 */\n      0x00\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":754:762  return 0 */\n      swap1\n      pop\n      jump(tag_26)\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":716:774  if (array.length == 0) {... */\n    tag_27:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":786:797  uint256 low */\n      0x00\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":812:824  uint256 high */\n      dup1\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":827:832  array */\n      dup5\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":827:839  array.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":812:839  uint256 high = array.length */\n      swap1\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":852:1260  while (low < high) {... */\n    tag_28:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":865:869  high */\n      dup1\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":859:862  low */\n      dup3\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":859:869  low < high */\n      lt\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":852:1260  while (low < high) {... */\n      iszero\n      tag_29\n      jumpi\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":886:897  uint256 mid */\n      0x00\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":900:923  Math.average(low, high) */\n      tag_30\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":913:916  low */\n      dup4\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":918:922  high */\n      dup4\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":900:912  Math.average */\n      tag_31\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":900:923  Math.average(low, high) */\n      jump\t// in\n    tag_30:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":886:923  uint256 mid = Math.average(low, high) */\n      swap1\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1141:1148  element */\n      dup5\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1128:1133  array */\n      dup7\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1134:1137  mid */\n      dup3\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1128:1138  array[mid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_32\n      jumpi\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n    tag_32:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1128:1148  array[mid] > element */\n      gt\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1124:1249  if (array[mid] > element) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1176:1179  mid */\n      dup1\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1169:1179  high = mid */\n      swap2\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1124:1249  if (array[mid] > element) {... */\n      jump(tag_37)\n    tag_36:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1232:1233  1 */\n      0x01\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1226:1229  mid */\n      dup2\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1226:1233  mid + 1 */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1220:1233  low = mid + 1 */\n      swap3\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1124:1249  if (array[mid] > element) {... */\n    tag_37:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":871:1260  {... */\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":852:1260  while (low < high) {... */\n      jump(tag_28)\n    tag_29:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1362:1363  0 */\n      0x00\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1356:1359  low */\n      dup3\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1356:1363  low > 0 */\n      gt\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1356:1392  low > 0 && array[low - 1] == element */\n      dup1\n      iszero\n      tag_40\n      jumpi\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1385:1392  element */\n      dup4\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1367:1372  array */\n      dup6\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1379:1380  1 */\n      0x01\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1373:1376  low */\n      dup5\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1373:1380  low - 1 */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1367:1381  array[low - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_43\n      jumpi\n      tag_44\n      tag_34\n      jump\t// in\n    tag_44:\n    tag_43:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1367:1392  array[low - 1] == element */\n      eq\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1356:1392  low > 0 && array[low - 1] == element */\n    tag_40:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1352:1478  if (low > 0 && array[low - 1] == element) {... */\n      iszero\n      tag_46\n      jumpi\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1422:1423  1 */\n      0x01\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1416:1419  low */\n      dup3\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1416:1423  low - 1 */\n      tag_47\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_47:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1409:1423  return low - 1 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_26)\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1352:1478  if (low > 0 && array[low - 1] == element) {... */\n    tag_46:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1463:1466  low */\n      dup2\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":1456:1466  return low */\n      swap3\n      pop\n      pop\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/ArraysLibrary.sol\":607:1485  function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {... */\n    tag_26:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":673:829  function average(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_31:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":735:742  uint256 */\n      0x00\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":820:821  2 */\n      0x02\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":815:816  b */\n      dup3\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":811:812  a */\n      dup5\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":811:816  a ^ b */\n      xor\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":810:821  (a ^ b) / 2 */\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":805:806  b */\n      dup3\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":801:802  a */\n      dup5\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":801:806  a & b */\n      and\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":800:821  (a & b) + (a ^ b) / 2 */\n      tag_52\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_52:\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":793:821  return (a & b) + (a ^ b) / 2 */\n      swap1\n      pop\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":673:829  function average(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_54:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_56:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_57:\n        /* \"#utility.yul\":490:514   */\n      tag_68\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_56\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_69:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_58:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_71\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_57\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_74\n      tag_54\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":766:885   */\n    tag_73:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_75\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_58\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_59:\n        /* \"#utility.yul\":1112:1136   */\n      tag_77\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_56\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_11:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_79\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_59\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1557   */\n    tag_34:\n        /* \"#utility.yul\":1425:1502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1415:1503   */\n      mstore\n        /* \"#utility.yul\":1522:1526   */\n      0x32\n        /* \"#utility.yul\":1519:1520   */\n      0x04\n        /* \"#utility.yul\":1512:1527   */\n      mstore\n        /* \"#utility.yul\":1546:1550   */\n      0x24\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1536:1551   */\n      revert\n        /* \"#utility.yul\":1563:1743   */\n    tag_60:\n        /* \"#utility.yul\":1611:1688   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1608:1609   */\n      0x00\n        /* \"#utility.yul\":1601:1689   */\n      mstore\n        /* \"#utility.yul\":1708:1712   */\n      0x11\n        /* \"#utility.yul\":1705:1706   */\n      0x04\n        /* \"#utility.yul\":1698:1713   */\n      mstore\n        /* \"#utility.yul\":1732:1736   */\n      0x24\n        /* \"#utility.yul\":1729:1730   */\n      0x00\n        /* \"#utility.yul\":1722:1737   */\n      revert\n        /* \"#utility.yul\":1749:1940   */\n    tag_39:\n        /* \"#utility.yul\":1789:1792   */\n      0x00\n        /* \"#utility.yul\":1808:1828   */\n      tag_83\n        /* \"#utility.yul\":1826:1827   */\n      dup3\n        /* \"#utility.yul\":1808:1828   */\n      tag_56\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1803:1828   */\n      swap2\n      pop\n        /* \"#utility.yul\":1842:1862   */\n      tag_84\n        /* \"#utility.yul\":1860:1861   */\n      dup4\n        /* \"#utility.yul\":1842:1862   */\n      tag_56\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1837:1862   */\n      swap3\n      pop\n        /* \"#utility.yul\":1885:1886   */\n      dup3\n        /* \"#utility.yul\":1882:1883   */\n      dup3\n        /* \"#utility.yul\":1878:1887   */\n      add\n        /* \"#utility.yul\":1871:1887   */\n      swap1\n      pop\n        /* \"#utility.yul\":1906:1909   */\n      dup1\n        /* \"#utility.yul\":1903:1904   */\n      dup3\n        /* \"#utility.yul\":1900:1910   */\n      gt\n        /* \"#utility.yul\":1897:1933   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":1913:1931   */\n      tag_86\n      tag_60\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1897:1933   */\n    tag_85:\n        /* \"#utility.yul\":1749:1940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1946:2140   */\n    tag_42:\n        /* \"#utility.yul\":1986:1990   */\n      0x00\n        /* \"#utility.yul\":2006:2026   */\n      tag_88\n        /* \"#utility.yul\":2024:2025   */\n      dup3\n        /* \"#utility.yul\":2006:2026   */\n      tag_56\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2001:2026   */\n      swap2\n      pop\n        /* \"#utility.yul\":2040:2060   */\n      tag_89\n        /* \"#utility.yul\":2058:2059   */\n      dup4\n        /* \"#utility.yul\":2040:2060   */\n      tag_56\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2035:2060   */\n      swap3\n      pop\n        /* \"#utility.yul\":2084:2085   */\n      dup3\n        /* \"#utility.yul\":2081:2082   */\n      dup3\n        /* \"#utility.yul\":2077:2086   */\n      sub\n        /* \"#utility.yul\":2069:2086   */\n      swap1\n      pop\n        /* \"#utility.yul\":2108:2109   */\n      dup2\n        /* \"#utility.yul\":2102:2106   */\n      dup2\n        /* \"#utility.yul\":2099:2110   */\n      gt\n        /* \"#utility.yul\":2096:2133   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":2113:2131   */\n      tag_91\n      tag_60\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2096:2133   */\n    tag_90:\n        /* \"#utility.yul\":1946:2140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2146:2326   */\n    tag_61:\n        /* \"#utility.yul\":2194:2271   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2191:2192   */\n      0x00\n        /* \"#utility.yul\":2184:2272   */\n      mstore\n        /* \"#utility.yul\":2291:2295   */\n      0x12\n        /* \"#utility.yul\":2288:2289   */\n      0x04\n        /* \"#utility.yul\":2281:2296   */\n      mstore\n        /* \"#utility.yul\":2315:2319   */\n      0x24\n        /* \"#utility.yul\":2312:2313   */\n      0x00\n        /* \"#utility.yul\":2305:2320   */\n      revert\n        /* \"#utility.yul\":2332:2517   */\n    tag_51:\n        /* \"#utility.yul\":2372:2373   */\n      0x00\n        /* \"#utility.yul\":2389:2409   */\n      tag_94\n        /* \"#utility.yul\":2407:2408   */\n      dup3\n        /* \"#utility.yul\":2389:2409   */\n      tag_56\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2384:2409   */\n      swap2\n      pop\n        /* \"#utility.yul\":2423:2443   */\n      tag_95\n        /* \"#utility.yul\":2441:2442   */\n      dup4\n        /* \"#utility.yul\":2423:2443   */\n      tag_56\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2418:2443   */\n      swap3\n      pop\n        /* \"#utility.yul\":2462:2463   */\n      dup3\n        /* \"#utility.yul\":2452:2487   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":2467:2485   */\n      tag_97\n      tag_61\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2452:2487   */\n    tag_96:\n        /* \"#utility.yul\":2509:2510   */\n      dup3\n        /* \"#utility.yul\":2506:2507   */\n      dup3\n        /* \"#utility.yul\":2502:2511   */\n      div\n        /* \"#utility.yul\":2497:2511   */\n      swap1\n      pop\n        /* \"#utility.yul\":2332:2517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204fb6597ce9d765e82703e47190293793d51f705dc28bd15172af05e6db4d4d5d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610413806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806333e3a58a14610046578063d39fa23314610076578063fce68023146100a6575b600080fd5b610060600480360381019061005b9190610260565b6100c2565b60405161006d919061029c565b60405180910390f35b610090600480360381019061008b9190610260565b6100d6565b60405161009d919061029c565b60405180910390f35b6100c060048036038101906100bb9190610260565b6100fa565b005b60006100cf600083610126565b9050919050565b600081815481106100e657600080fd5b906000526020600020016000915090505481565b600081908060018154018082558091505060019003906000526020600020016000909190919091505550565b60008083805490500361013c57600090506101f9565b600080848054905090505b808210156101a057600061015b83836101ff565b905084868281548110610171576101706102b7565b5b9060005260206000200154111561018a5780915061019a565b6001816101979190610315565b92505b50610147565b6000821180156101d8575083856001846101ba9190610349565b815481106101cb576101ca6102b7565b5b9060005260206000200154145b156101f3576001826101ea9190610349565b925050506101f9565b81925050505b92915050565b6000600282841861021091906103ac565b82841661021d9190610315565b905092915050565b600080fd5b6000819050919050565b61023d8161022a565b811461024857600080fd5b50565b60008135905061025a81610234565b92915050565b60006020828403121561027657610275610225565b5b60006102848482850161024b565b91505092915050565b6102968161022a565b82525050565b60006020820190506102b1600083018461028d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103208261022a565b915061032b8361022a565b9250828201905080821115610343576103426102e6565b5b92915050565b60006103548261022a565b915061035f8361022a565b9250828203905081811115610377576103766102e6565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103b78261022a565b91506103c28361022a565b9250826103d2576103d161037d565b5b82820490509291505056fea26469706673582212204fb6597ce9d765e82703e47190293793d51f705dc28bd15172af05e6db4d4d5d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33E3A58A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xD39FA233 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFCE68023 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xCF PUSH1 0x0 DUP4 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SUB PUSH2 0x13C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP1 SLOAD SWAP1 POP SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 PUSH2 0x15B DUP4 DUP4 PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x2B7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD GT ISZERO PUSH2 0x18A JUMPI DUP1 SWAP2 POP PUSH2 0x19A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x147 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1D8 JUMPI POP DUP4 DUP6 PUSH1 0x1 DUP5 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1CB JUMPI PUSH2 0x1CA PUSH2 0x2B7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1F9 JUMP JUMPDEST DUP2 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x22A JUMP JUMPDEST DUP2 EQ PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25A DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276 JUMPI PUSH2 0x275 PUSH2 0x225 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x284 DUP5 DUP3 DUP6 ADD PUSH2 0x24B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x296 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x320 DUP3 PUSH2 0x22A JUMP JUMPDEST SWAP2 POP PUSH2 0x32B DUP4 PUSH2 0x22A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x343 JUMPI PUSH2 0x342 PUSH2 0x2E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x354 DUP3 PUSH2 0x22A JUMP JUMPDEST SWAP2 POP PUSH2 0x35F DUP4 PUSH2 0x22A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x377 JUMPI PUSH2 0x376 PUSH2 0x2E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B7 DUP3 PUSH2 0x22A JUMP JUMPDEST SWAP2 POP PUSH2 0x3C2 DUP4 PUSH2 0x22A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3D2 JUMPI PUSH2 0x3D1 PUSH2 0x37D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xB6 MSIZE PUSH29 0xE9D765E82703E47190293793D51F705DC28BD15172AF05E6DB4D4D5D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "1605:470:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addNumber_103": {
									"entryPoint": 250,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@average_180": {
									"entryPoint": 511,
									"id": 180,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@findUpperBound_117": {
									"entryPoint": 194,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@findUpperBound_83": {
									"entryPoint": 294,
									"id": 83,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@numbers_91": {
									"entryPoint": 214,
									"id": 91,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2520:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:2",
														"type": ""
													}
												],
												"src": "1025:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:2",
														"type": ""
													}
												],
												"src": "1149:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1405:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1415:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1522:4:2",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1546:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:15:2"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1377:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1591:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1611:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1601:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1708:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1698:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1698:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1698:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1732:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1722:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1722:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1563:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1793:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1803:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1826:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1808:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1803:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1837:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1860:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1842:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1837:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1871:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1882:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1885:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1878:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1871:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1911:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1913:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1913:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1913:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1903:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1906:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1900:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1900:10:2"
															},
															"nodeType": "YulIf",
															"src": "1897:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1780:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1783:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1789:3:2",
														"type": ""
													}
												],
												"src": "1749:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1991:149:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2001:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2024:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2006:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2001:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2035:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2058:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2035:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2069:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2081:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2084:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2111:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2113:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2113:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2113:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2102:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2108:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2099:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:11:2"
															},
															"nodeType": "YulIf",
															"src": "2096:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1977:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1980:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1986:4:2",
														"type": ""
													}
												],
												"src": "1946:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2174:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2191:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2194:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2184:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2184:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2288:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2291:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2281:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2315:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2305:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2305:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2146:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2374:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2384:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2407:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2389:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2389:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2384:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2418:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2441:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2423:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2423:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2418:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2465:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2467:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2467:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2467:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2462:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2455:9:2"
															},
															"nodeType": "YulIf",
															"src": "2452:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2497:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2506:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2509:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2502:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2497:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2363:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2366:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2372:1:2",
														"type": ""
													}
												],
												"src": "2332:185:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806333e3a58a14610046578063d39fa23314610076578063fce68023146100a6575b600080fd5b610060600480360381019061005b9190610260565b6100c2565b60405161006d919061029c565b60405180910390f35b610090600480360381019061008b9190610260565b6100d6565b60405161009d919061029c565b60405180910390f35b6100c060048036038101906100bb9190610260565b6100fa565b005b60006100cf600083610126565b9050919050565b600081815481106100e657600080fd5b906000526020600020016000915090505481565b600081908060018154018082558091505060019003906000526020600020016000909190919091505550565b60008083805490500361013c57600090506101f9565b600080848054905090505b808210156101a057600061015b83836101ff565b905084868281548110610171576101706102b7565b5b9060005260206000200154111561018a5780915061019a565b6001816101979190610315565b92505b50610147565b6000821180156101d8575083856001846101ba9190610349565b815481106101cb576101ca6102b7565b5b9060005260206000200154145b156101f3576001826101ea9190610349565b925050506101f9565b81925050505b92915050565b6000600282841861021091906103ac565b82841661021d9190610315565b905092915050565b600080fd5b6000819050919050565b61023d8161022a565b811461024857600080fd5b50565b60008135905061025a81610234565b92915050565b60006020828403121561027657610275610225565b5b60006102848482850161024b565b91505092915050565b6102968161022a565b82525050565b60006020820190506102b1600083018461028d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103208261022a565b915061032b8361022a565b9250828201905080821115610343576103426102e6565b5b92915050565b60006103548261022a565b915061035f8361022a565b9250828203905081811115610377576103766102e6565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006103b78261022a565b91506103c28361022a565b9250826103d2576103d161037d565b5b82820490509291505056fea26469706673582212204fb6597ce9d765e82703e47190293793d51f705dc28bd15172af05e6db4d4d5d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33E3A58A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xD39FA233 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFCE68023 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x260 JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xCF PUSH1 0x0 DUP4 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SUB PUSH2 0x13C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP1 SLOAD SWAP1 POP SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 PUSH2 0x15B DUP4 DUP4 PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x2B7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD GT ISZERO PUSH2 0x18A JUMPI DUP1 SWAP2 POP PUSH2 0x19A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x147 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1D8 JUMPI POP DUP4 DUP6 PUSH1 0x1 DUP5 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1CB JUMPI PUSH2 0x1CA PUSH2 0x2B7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1F9 JUMP JUMPDEST DUP2 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x22A JUMP JUMPDEST DUP2 EQ PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25A DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276 JUMPI PUSH2 0x275 PUSH2 0x225 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x284 DUP5 DUP3 DUP6 ADD PUSH2 0x24B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x296 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x320 DUP3 PUSH2 0x22A JUMP JUMPDEST SWAP2 POP PUSH2 0x32B DUP4 PUSH2 0x22A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x343 JUMPI PUSH2 0x342 PUSH2 0x2E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x354 DUP3 PUSH2 0x22A JUMP JUMPDEST SWAP2 POP PUSH2 0x35F DUP4 PUSH2 0x22A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x377 JUMPI PUSH2 0x376 PUSH2 0x2E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B7 DUP3 PUSH2 0x22A JUMP JUMPDEST SWAP2 POP PUSH2 0x3C2 DUP4 PUSH2 0x22A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3D2 JUMPI PUSH2 0x3D1 PUSH2 0x37D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xB6 MSIZE PUSH29 0xE9D765E82703E47190293793D51F705DC28BD15172AF05E6DB4D4D5D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "1605:470:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1936:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1706:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1739:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1936:136;1998:7;2025:39;2047:7;2056;2025:21;:39::i;:::-;2018:46;;1936:136;;;:::o;1706:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1739:81::-;1792:7;1805:6;1792:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1739:81;:::o;607:878::-;696:7;736:1;720:5;:12;;;;:17;716:58;;761:1;754:8;;;;716:58;786:11;812:12;827:5;:12;;;;812:27;;852:408;865:4;859:3;:10;852:408;;;886:11;900:23;913:3;918:4;900:12;:23::i;:::-;886:37;;1141:7;1128:5;1134:3;1128:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;1124:125;;;1176:3;1169:10;;1124:125;;;1232:1;1226:3;:7;;;;:::i;:::-;1220:13;;1124:125;871:389;852:408;;;1362:1;1356:3;:7;:36;;;;;1385:7;1367:5;1379:1;1373:3;:7;;;;:::i;:::-;1367:14;;;;;;;;:::i;:::-;;;;;;;;;;:25;1356:36;1352:126;;;1422:1;1416:3;:7;;;;:::i;:::-;1409:14;;;;;;1352:126;1463:3;1456:10;;;;607:878;;;;;:::o;673:156:1:-;735:7;820:1;815;811;:5;810:11;;;;:::i;:::-;805:1;801;:5;800:21;;;;:::i;:::-;793:28;;673:156;;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:180::-;1425:77;1422:1;1415:88;1522:4;1519:1;1512:15;1546:4;1543:1;1536:15;1563:180;1611:77;1608:1;1601:88;1708:4;1705:1;1698:15;1732:4;1729:1;1722:15;1749:191;1789:3;1808:20;1826:1;1808:20;:::i;:::-;1803:25;;1842:20;1860:1;1842:20;:::i;:::-;1837:25;;1885:1;1882;1878:9;1871:16;;1906:3;1903:1;1900:10;1897:36;;;1913:18;;:::i;:::-;1897:36;1749:191;;;;:::o;1946:194::-;1986:4;2006:20;2024:1;2006:20;:::i;:::-;2001:25;;2040:20;2058:1;2040:20;:::i;:::-;2035:25;;2084:1;2081;2077:9;2069:17;;2108:1;2102:4;2099:11;2096:37;;;2113:18;;:::i;:::-;2096:37;1946:194;;;;:::o;2146:180::-;2194:77;2191:1;2184:88;2291:4;2288:1;2281:15;2315:4;2312:1;2305:15;2332:185;2372:1;2389:20;2407:1;2389:20;:::i;:::-;2384:25;;2423:20;2441:1;2423:20;:::i;:::-;2418:25;;2462:1;2452:35;;2467:18;;:::i;:::-;2452:35;2509:1;2506;2502:9;2497:14;;2332:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "208600",
								"executionCost": "251",
								"totalCost": "208851"
							},
							"external": {
								"addNumber(uint256)": "46851",
								"findUpperBound(uint256)": "infinite",
								"numbers(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1605,
									"end": 2075,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1605,
									"end": 2075,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204fb6597ce9d765e82703e47190293793d51f705dc28bd15172af05e6db4d4d5d64736f6c63430008110033",
									".code": [
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "33E3A58A"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "D39FA233"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "FCE68023"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2075,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1936,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1936,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1936,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1706,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1706,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1706,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1739,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1739,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2025,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2018,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2018,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 1485,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 607,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 720,
											"end": 732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 716,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 716,
											"end": 774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 754,
											"end": 762,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 774,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 716,
											"end": 774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 786,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 827,
											"end": 839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 1260,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 852,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 865,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 859,
											"end": 862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 859,
											"end": 869,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 852,
											"end": 1260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 852,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 852,
											"end": 1260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 913,
											"end": 916,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 918,
											"end": 922,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 900,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 900,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 900,
											"end": 923,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 900,
											"end": 923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1128,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1148,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1124,
											"end": 1249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1124,
											"end": 1249,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1249,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1124,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1226,
											"end": 1229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1226,
											"end": 1233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1233,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1249,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1124,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 852,
											"end": 1260,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 1260,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 852,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1373,
											"end": 1376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1373,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1367,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1392,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1416,
											"end": 1419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1416,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1409,
											"end": 1423,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1463,
											"end": 1466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1466,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 1485,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 607,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 1485,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 607,
											"end": 1485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 607,
											"end": 1485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 1485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 1485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 673,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 821,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 815,
											"end": 816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 811,
											"end": 812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 811,
											"end": 816,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 810,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 810,
											"end": 821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 810,
											"end": 821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 810,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 810,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 810,
											"end": 821,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 810,
											"end": 821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 801,
											"end": 802,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 801,
											"end": 806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 800,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 800,
											"end": 821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 800,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 821,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 800,
											"end": 821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 793,
											"end": 821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 829,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 673,
											"end": 829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 673,
											"end": 829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1503,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1519,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 1527,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1551,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1743,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1563,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1689,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1698,
											"end": 1713,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1737,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1749,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1808,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1828,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1860,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1842,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1842,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1886,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1883,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1910,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1933,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1897,
											"end": 1933,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1913,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1933,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1897,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1940,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2140,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1946,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2006,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2026,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2006,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2026,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2040,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2060,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2040,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2060,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2082,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2110,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2133,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2096,
											"end": 2133,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2113,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2113,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2096,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2140,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2140,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2326,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2146,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2295,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2288,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2281,
											"end": 2296,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2319,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2320,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2517,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2332,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2407,
											"end": 2408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2389,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2389,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2423,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2443,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2423,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2443,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2452,
											"end": 2487,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2467,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2467,
											"end": 2485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2485,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2467,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2487,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2452,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2507,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2502,
											"end": 2511,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"库合约/ArraysLibrary.sol",
								"库合约/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addNumber(uint256)": "fce68023",
							"findUpperBound(uint256)": "33e3a58a",
							"numbers(uint256)": "d39fa233"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"addNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"element\",\"type\":\"uint256\"}],\"name\":\"findUpperBound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"numbers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5e93\\u5408\\u7ea6/ArraysLibrary.sol\":\"ArraysExample\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5e93\\u5408\\u7ea6/ArraysLibrary.sol\":{\"keccak256\":\"0x7208876bc64ffda40e72963a2269cab016313eb1f4bf43ac01b71a8b33cf00a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26562943421478bd81abea734a16890d0a5483e6ed34dc630b18934fbd61f5b6\",\"dweb:/ipfs/QmStzLFt4BBHvRd4JPzjxCk8Ayjva8HgWJJ3BZnwZCgzac\"]},\"\\u5e93\\u5408\\u7ea6/Math.sol\":{\"keccak256\":\"0x24b35fb10a3bcca3a66ec01962f10a243c17e8f06595f9a540227a4b4289efa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5af75827de7176584006d279634b74f4fce614053197ce4b6cace5c0583c50dd\",\"dweb:/ipfs/QmTT73G1gnHajNrsffQr8RqWaqWg7ryLf76n5EgXoiCSkF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "库合约/ArraysLibrary.sol:ArraysExample",
								"label": "numbers",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"库合约/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "标准数学工具缺少在 Solidity 语言中。",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":187:1524  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe5\\xba\\x93\\xe5\\x90\\x88\\xe7\\xba\\xa6/Math.sol\":187:1524  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206d2761477a42c08109223f1ac7627f1b55942a2a4da73cae02f2fa2d65bafac564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d2761477a42c08109223f1ac7627f1b55942a2a4da73cae02f2fa2d65bafac564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x2761477A42C08109223F1AC7627F SHL SSTORE SWAP5 0x2A 0x2A 0x4D 0xA7 EXTCODECOPY 0xAE MUL CALLCODE STATICCALL 0x2D PUSH6 0xBAFAC564736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "187:1337:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d2761477a42c08109223f1ac7627f1b55942a2a4da73cae02f2fa2d65bafac564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x2761477A42C08109223F1AC7627F SHL SSTORE SWAP5 0x2A 0x2A 0x4D 0xA7 EXTCODECOPY 0xAE MUL CALLCODE STATICCALL 0x2D PUSH6 0xBAFAC564736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "187:1337:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 187,
									"end": 1524,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d2761477a42c08109223f1ac7627f1b55942a2a4da73cae02f2fa2d65bafac564736f6c63430008110033",
									".code": [
										{
											"begin": 187,
											"end": 1524,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 187,
											"end": 1524,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 187,
											"end": 1524,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 187,
											"end": 1524,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 1524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 1524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 187,
											"end": 1524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 1524,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"库合约/ArraysLibrary.sol",
								"库合约/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"\\u6807\\u51c6\\u6570\\u5b66\\u5de5\\u5177\\u7f3a\\u5c11\\u5728 Solidity \\u8bed\\u8a00\\u4e2d\\u3002\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u5e93\\u5408\\u7ea6/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5e93\\u5408\\u7ea6/Math.sol\":{\"keccak256\":\"0x24b35fb10a3bcca3a66ec01962f10a243c17e8f06595f9a540227a4b4289efa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5af75827de7176584006d279634b74f4fce614053197ce4b6cace5c0583c50dd\",\"dweb:/ipfs/QmTT73G1gnHajNrsffQr8RqWaqWg7ryLf76n5EgXoiCSkF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"库合约/ArraysLibrary.sol": {
				"ast": {
					"absolutePath": "库合约/ArraysLibrary.sol",
					"exportedSymbols": {
						"Arrays": [
							84
						],
						"ArraysExample": [
							118
						],
						"Math": [
							227
						]
					},
					"id": 119,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:0"
						},
						{
							"absolutePath": "库合约/Math.sol",
							"file": "./Math.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 119,
							"sourceUnit": 228,
							"src": "115:20:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "139:63:0",
								"text": " @dev 这是一组与数组类型相关的函数。"
							},
							"fullyImplemented": true,
							"id": 84,
							"linearizedBaseContracts": [
								84
							],
							"name": "Arrays",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "705:780:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 14,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "726:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "720:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "736:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "720:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 21,
												"nodeType": "IfStatement",
												"src": "716:58:0",
												"trueBody": {
													"id": 20,
													"nodeType": "Block",
													"src": "739:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 13,
															"id": 19,
															"nodeType": "Return",
															"src": "754:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													23
												],
												"declarations": [
													{
														"constant": false,
														"id": 23,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "794:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 82,
														"src": "786:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 22,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"initialValue": {
													"hexValue": "30",
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "800:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "786:15:0"
											},
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "820:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 82,
														"src": "812:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 26,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "812:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 30,
												"initialValue": {
													"expression": {
														"id": 28,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "827:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "833:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "827:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "812:27:0"
											},
											{
												"body": {
													"id": 60,
													"nodeType": "Block",
													"src": "871:389:0",
													"statements": [
														{
															"assignments": [
																35
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 35,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "894:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 60,
																	"src": "886:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 34,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "886:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 41,
															"initialValue": {
																"arguments": [
																	{
																		"id": 38,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "913:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 39,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "918:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 36,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "900:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$227_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "905:7:0",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "900:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "900:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "886:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 42,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "1128:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 44,
																	"indexExpression": {
																		"id": 43,
																		"name": "mid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "1134:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1128:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 45,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1141:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1128:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 58,
																"nodeType": "Block",
																"src": "1201:48:0",
																"statements": [
																	{
																		"expression": {
																			"id": 56,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 52,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "1220:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 55,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 53,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 35,
																					"src": "1226:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 54,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1232:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1226:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1220:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 57,
																		"nodeType": "ExpressionStatement",
																		"src": "1220:13:0"
																	}
																]
															},
															"id": 59,
															"nodeType": "IfStatement",
															"src": "1124:125:0",
															"trueBody": {
																"id": 51,
																"nodeType": "Block",
																"src": "1150:45:0",
																"statements": [
																	{
																		"expression": {
																			"id": 49,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 47,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "1169:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 48,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 35,
																				"src": "1176:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1169:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 50,
																		"nodeType": "ExpressionStatement",
																		"src": "1169:10:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 31,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "859:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 32,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "865:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "859:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 61,
												"nodeType": "WhileStatement",
												"src": "852:408:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 62,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1356:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1362:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 65,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1367:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 69,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 66,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1373:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1379:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1367:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 70,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1385:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1367:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1356:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 80,
													"nodeType": "Block",
													"src": "1441:37:0",
													"statements": [
														{
															"expression": {
																"id": 78,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1463:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 13,
															"id": 79,
															"nodeType": "Return",
															"src": "1456:10:0"
														}
													]
												},
												"id": 81,
												"nodeType": "IfStatement",
												"src": "1352:126:0",
												"trueBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "1394:41:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 73,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1416:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1422:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1416:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 13,
															"id": 76,
															"nodeType": "Return",
															"src": "1409:14:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "226:375:0",
										"text": " @dev 在排序的数组array中搜索，并返回第一个包含大于或等于“元素”的值的索引。如\n 果不存在这样的索引（即数组中的所有值都严格小于“元素”），则返回数组长度。时间复杂度\n 为O（log n）。\n 预计数组按升序排列，并且不包含重复的元素。"
									},
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "616:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "649:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "631:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 5,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 6,
													"nodeType": "ArrayTypeName",
													"src": "631:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:42:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:9:0"
									},
									"scope": 84,
									"src": "607:878:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 119,
							"src": "204:1284:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ArraysExample",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 118,
							"linearizedBaseContracts": [
								118
							],
							"name": "ArraysExample",
							"nameLocation": "1614:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 88,
									"libraryName": {
										"id": 85,
										"name": "Arrays",
										"nameLocations": [
											"1641:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 84,
										"src": "1641:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1635:27:0",
									"typeName": {
										"baseType": {
											"id": 86,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1652:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 87,
										"nodeType": "ArrayTypeName",
										"src": "1652:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d39fa233",
									"id": 91,
									"mutability": "mutable",
									"name": "numbers",
									"nameLocation": "1723:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "1706:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 89,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1706:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 90,
										"nodeType": "ArrayTypeName",
										"src": "1706:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1781:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 99,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1805:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 96,
															"name": "numbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1800:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1792:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1792:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1792:20:0"
											}
										]
									},
									"functionSelector": "fce68023",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addNumber",
									"nameLocation": "1748:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "1766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1757:16:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1781:0:0"
									},
									"scope": 118,
									"src": "1739:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2007:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 112,
															"name": "numbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2047:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 113,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 110,
															"name": "Arrays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "2025:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Arrays_$84_$",
																"typeString": "type(library Arrays)"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2032:14:0",
														"memberName": "findUpperBound",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 83,
														"src": "2025:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256[] storage pointer,uint256) view returns (uint256)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2025:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 109,
												"id": 115,
												"nodeType": "Return",
												"src": "2018:46:0"
											}
										]
									},
									"functionSelector": "33e3a58a",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "1945:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "1968:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1960:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:17:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1998:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:9:0"
									},
									"scope": 118,
									"src": "1936:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 119,
							"src": "1605:470:0",
							"usedErrors": []
						}
					],
					"src": "88:1989:0"
				},
				"id": 0
			},
			"库合约/Math.sol": {
				"ast": {
					"absolutePath": "库合约/Math.sol",
					"exportedSymbols": {
						"Math": [
							227
						]
					},
					"id": 228,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 120,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 121,
								"nodeType": "StructuredDocumentation",
								"src": "118:67:1",
								"text": " @dev 标准数学工具缺少在 Solidity 语言中。"
							},
							"fullyImplemented": true,
							"id": 227,
							"linearizedBaseContracts": [
								227
							],
							"name": "Math",
							"nameLocation": "195:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "354:40:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 131,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "372:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 132,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "377:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "372:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 135,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "385:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "372:14:1",
													"trueExpression": {
														"id": 134,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "381:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 130,
												"id": 137,
												"nodeType": "Return",
												"src": "365:21:1"
											}
										]
									},
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "207:74:1",
										"text": " @dev 函数返回两个数字中最大的那个数。"
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "296:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "308:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "300:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "319:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "311:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:22:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "345:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:9:1"
									},
									"scope": 227,
									"src": "287:107:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "540:39:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 149,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "558:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 150,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "562:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "558:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 153,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "570:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "558:13:1",
													"trueExpression": {
														"id": 152,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "566:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 148,
												"id": 155,
												"nodeType": "Return",
												"src": "551:20:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "402:65:1",
										"text": " @dev 返回两个数字中最小的那个。"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "482:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "494:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "486:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "505:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "497:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:22:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "531:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:9:1"
									},
									"scope": 227,
									"src": "473:106:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "744:85:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "801:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 168,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "805:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "801:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 170,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "800:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 171,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "811:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 172,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "815:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "811:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 174,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "810:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "820:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "810:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "800:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 166,
												"id": 178,
												"nodeType": "Return",
												"src": "793:28:1"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "587:80:1",
										"text": " @dev 返回两个数字的平均值，结果向零取整。"
									},
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "682:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "698:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "690:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "709:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "701:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:22:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "735:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:9:1"
									},
									"scope": 227,
									"src": "673:156:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1092:126:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 190,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "1182:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 191,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1186:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1182:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 193,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "1191:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 194,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "1195:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1191:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1200:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1191:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1208:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1191:18:1",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1204:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 201,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1190:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1182:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 203,
												"nodeType": "Return",
												"src": "1175:35:1"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "837:178:1",
										"text": " @dev 返回两个数相除的结果的向上取整。\n 这与使用\"/\"进行标准除法不同，因为它向上取整而不是向下取整。"
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1030:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1046:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1038:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1057:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1049:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:22:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1083:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:1"
									},
									"scope": 227,
									"src": "1021:197:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "1361:160:1",
										"statements": [
											{
												"id": 224,
												"nodeType": "UncheckedBlock",
												"src": "1372:142:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 215,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "1486:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1491:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1486:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1499:2:1",
																		"subExpression": {
																			"id": 219,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "1500:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1486:15:1",
																	"trueExpression": {
																		"id": 218,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "1495:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1478:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 213,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1478:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1478:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 212,
														"id": 223,
														"nodeType": "Return",
														"src": "1471:31:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1226:74:1",
										"text": " @dev 返回一个有符号值的绝对无符号值。"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1315:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1326:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1319:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 207,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:10:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1352:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:9:1"
									},
									"scope": 227,
									"src": "1306:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 228,
							"src": "187:1337:1",
							"usedErrors": []
						}
					],
					"src": "91:1433:1"
				},
				"id": 1
			}
		}
	}
}